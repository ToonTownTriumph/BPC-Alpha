<Application x:Class="WpfApplication1.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:charting="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
             StartupUri="Introduction.xaml">
    <Application.Resources>        
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resource Dictionary.xaml">
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary/>
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <ControlTemplate x:Key="TestTemplate">
                <Image Source="Team Data/America East/AlbanyLogoSmall.png"/>
            </ControlTemplate>
            <Style x:Name="ToolTipDataPointStyle" TargetType="charting:LineDataPoint">
                <Setter Property="Background" Value="#0077CC" />
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="charting:LineDataPoint">
                            <Grid x:Name="Root" Opacity="1">
                                <ToolTipService.ToolTip>
                                    <StackPanel Margin="2,2,2,2" Width="50" Height="50">
                                        <ContentControl Content="{TemplateBinding IndependentValue}" ContentStringFormat="Percent : {00:00}"/>
                                        <ContentControl Content="{TemplateBinding DependentValue}" ContentStringFormat="Time : {00.0}"/>
                                    </StackPanel>
                                </ToolTipService.ToolTip>
                                <Ellipse StrokeThickness="1" Stroke="Black" Fill="Red"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="new style" TargetType="{x:Type Label}">
                <Setter Property="Background" Value="Green"></Setter>
            </Style>
            <Style x:Key="ButtonFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ualbanyPressed">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Image Source="Team Data/America East/Albany.png" Stretch="UniformToFill" Opacity=".3"/>
                        </ControlTemplate>
                        
                    </Setter.Value>
                </Setter>
            </Style>
            <Image x:Key="albanypic" Source="Team Data/America East/Albany.png" Stretch="UniformToFill" Opacity=".3"/>
            <LinearGradientBrush x:Name="ButtonNormalBackground" x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#F3F3F3" Offset="0"/>
                <GradientStop Color="#EBEBEB" Offset="0.5"/>
                <GradientStop Color="#DDDDDD" Offset="0.5"/>
                <GradientStop Color="#CDCDCD" Offset="1"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
            <!-- HelpBrush -->
            <VisualBrush x:Key="HelpBrush" Opacity="0.4" Stretch="None" AlignmentX="Left" >
                <VisualBrush.Visual>
                    <TextBlock FontStyle="Italic" Text="# Wins"/>
                </VisualBrush.Visual>
            </VisualBrush>
            <Style x:Key="scoreboardpercent" TargetType="{x:Type Label}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Label}">
                            <Border x:Name="_brdMain" BorderThickness="1,1,1,1"
                                            BorderBrush="Gray"
                                            Background="Black" 
                                            CornerRadius="9,9,9,9">
                                <Border BorderThickness="1,1,1,1"
                                BorderBrush="#FFAAAAAA"
                                CornerRadius="8,8,8,8">
                                    <Border BorderThickness="1,1,1,1"
                                    BorderBrush="Gray"
                                    CornerRadius="7,7,7,7">
                                        <Label Content="oo.oo" FontFamily="{DynamicResource ScoreboardFont}" Foreground="White" Opacity=".3" Padding="0,0,0,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                                        </Label>
                                    </Border>
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="warning" TargetType="{x:Type Label}" BasedOn="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Label}">
                            <Border x:Name="outside" 
                            BorderThickness="1,1,1,1"                                           
                            BorderBrush="Gray"
                            Background="Black" 
                            CornerRadius="9,9,9,9">
                                <Border x:Name="middle"
                                BorderThickness="1,1,1,1"
                                BorderBrush="#FFAAAAAA"
                                CornerRadius="8,8,8,8">
                                    <Border x:Name="inside"
                                    BorderThickness="1,1,1,1"
                                    BorderBrush="Gray"
                                    CornerRadius="7,7,7,7">
                                        <Label Content="oo.oo" FontFamily="{DynamicResource ScoreboardFont}" Foreground="White" Opacity=".3" Padding="0,0,0,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                                        </Label>
                                    </Border>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Label.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="outside" 
                                    Storyboard.TargetProperty="BorderBrush.Color" 
                                    From="Gray" 
                                    To="Red" 
                                    Duration="0:0:.8"
                                    AutoReverse="True"
                                    RepeatBehavior="Forever"/>
                                            <ColorAnimation Storyboard.TargetName="middle" 
                                    Storyboard.TargetProperty="BorderBrush.Color" 
                                    From="#FFAAAAAA" 
                                    To="Red" 
                                    Duration="0:0:.8"
                                    AutoReverse="True"
                                    RepeatBehavior="Forever"/>
                                            <ColorAnimation Storyboard.TargetName="inside" 
                                    Storyboard.TargetProperty="BorderBrush.Color" 
                                    From="Gray" 
                                    To="Red" 
                                    Duration="0:0:.8"
                                    AutoReverse="True"
                                    RepeatBehavior="Forever"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                            <!--Each state sets a brush on the Border in the template -->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="caution" TargetType="{x:Type Label}" BasedOn="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Label}">
                            <Border x:Name="outside" 
                            BorderThickness="1,1,1,1"                                           
                            BorderBrush="Gray"
                            Background="Black" 
                            CornerRadius="9,9,9,9">
                                <Border x:Name="middle"
                                BorderThickness="1,1,1,1"
                                BorderBrush="#FFAAAAAA"
                                CornerRadius="8,8,8,8">
                                    <Border x:Name="inside"
                                    BorderThickness="1,1,1,1"
                                    BorderBrush="Gray"
                                    CornerRadius="7,7,7,7">
                                        <Label Content="oo.oo" FontFamily="{DynamicResource ScoreboardFont}" Foreground="White" Opacity=".3" Padding="0,0,0,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                                        </Label>
                                    </Border>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Label.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="outside" 
                                    Storyboard.TargetProperty="BorderBrush.Color" 
                                    From="Gray" 
                                    To="Orange" 
                                    Duration="0:0:.8"
                                    AutoReverse="True"
                                    RepeatBehavior="Forever"/>
                                            <ColorAnimation Storyboard.TargetName="middle" 
                                    Storyboard.TargetProperty="BorderBrush.Color" 
                                    From="#FFAAAAAA" 
                                    To="Orange" 
                                    Duration="0:0:.8"
                                    AutoReverse="True"
                                    RepeatBehavior="Forever"/>
                                            <ColorAnimation Storyboard.TargetName="inside" 
                                    Storyboard.TargetProperty="BorderBrush.Color" 
                                    From="Gray" 
                                    To="Orange" 
                                    Duration="0:0:.8"
                                    AutoReverse="True"
                                    RepeatBehavior="Forever"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                            <!--Each state sets a brush on the Border in the template -->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="good1" TargetType="{x:Type Label}" BasedOn="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Label}">
                            <Border x:Name="outside" 
                            BorderThickness="1,1,1,1"                                           
                            BorderBrush="Gray"
                            Background="Black" 
                            CornerRadius="9,9,9,9">
                                <Border x:Name="middle"
                                BorderThickness="1,1,1,1"
                                BorderBrush="#FFAAAAAA"
                                CornerRadius="8,8,8,8">
                                    <Border x:Name="inside"
                                    BorderThickness="1,1,1,1"
                                    BorderBrush="Gray"
                                    CornerRadius="7,7,7,7">
                                        <Label Content="oo.oo" FontFamily="{DynamicResource ScoreboardFont}" Foreground="White" Opacity=".3" Padding="0,0,0,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                                        </Label>
                                    </Border>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Label.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="outside" 
                                    Storyboard.TargetProperty="BorderBrush.Color" 
                                    From="Gray" 
                                    To="#a0ff8a" 
                                    Duration="0:0:.8"
                                    AutoReverse="True"
                                    RepeatBehavior="Forever"/>
                                            <ColorAnimation Storyboard.TargetName="middle" 
                                    Storyboard.TargetProperty="BorderBrush.Color" 
                                    From="#FFAAAAAA" 
                                    To="#a0ff8a" 
                                    Duration="0:0:.8"
                                    AutoReverse="True"
                                    RepeatBehavior="Forever"/>
                                            <ColorAnimation Storyboard.TargetName="inside" 
                                    Storyboard.TargetProperty="BorderBrush.Color" 
                                    From="Gray" 
                                    To="#a0ff8a" 
                                    Duration="0:0:.8"
                                    AutoReverse="True"
                                    RepeatBehavior="Forever"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                            <!--Each state sets a brush on the Border in the template -->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="good2" TargetType="{x:Type Label}" BasedOn="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Label}">
                            <Border x:Name="outside" 
                            BorderThickness="1,1,1,1"                                           
                            BorderBrush="Gray"
                            Background="Black" 
                            CornerRadius="9,9,9,9">
                                <Border x:Name="middle"
                                BorderThickness="1,1,1,1"
                                BorderBrush="#FFAAAAAA"
                                CornerRadius="8,8,8,8">
                                    <Border x:Name="inside"
                                    BorderThickness="1,1,1,1"
                                    BorderBrush="Gray"
                                    CornerRadius="7,7,7,7">
                                        <Label Content="oo.oo" FontFamily="{DynamicResource ScoreboardFont}" Foreground="White" Opacity=".3" Padding="0,0,0,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                                        </Label>
                                    </Border>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Label.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="outside" 
                                    Storyboard.TargetProperty="BorderBrush.Color" 
                                    From="Gray" 
                                    To="#1aff00" 
                                    Duration="0:0:.8"
                                    AutoReverse="True"
                                    RepeatBehavior="Forever"/>
                                            <ColorAnimation Storyboard.TargetName="middle" 
                                    Storyboard.TargetProperty="BorderBrush.Color" 
                                    From="#FFAAAAAA" 
                                    To="#1aff00" 
                                    Duration="0:0:.8"
                                    AutoReverse="True"
                                    RepeatBehavior="Forever"/>
                                            <ColorAnimation Storyboard.TargetName="inside" 
                                    Storyboard.TargetProperty="BorderBrush.Color" 
                                    From="Gray" 
                                    To="#1aff00" 
                                    Duration="0:0:.8"
                                    AutoReverse="True"
                                    RepeatBehavior="Forever"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                            <!--Each state sets a brush on the Border in the template -->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TextboxHomeWin" TargetType="TextBox">

                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="Text" Value=""/>
                            <Condition Property="TextBox.IsFocused" Value="False"/>
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                            <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                        </MultiTrigger.Setters>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <!-- HelpBrush -->
            <Style x:Key="DefaultStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CustomButtonStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
                <Setter Property="FocusVisualStyle" Value="{DynamicResource SimpleButtonFocusVisual}"/>
                <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="Grid" Cursor="Hand">
                                <Border CornerRadius="2" x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                            </Grid>
                            <!--
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsKeyboardFocused" Value="true">
    								<Setter Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" TargetName="Border"/>
    							</Trigger>
    							<Trigger Property="IsMouseOver" Value="true">
    								<Setter Property="Background" Value="{DynamicResource MouseOverBrush}" TargetName="Border"/>
    							</Trigger>
    							<Trigger Property="IsPressed" Value="true">
    								<Setter Property="Background" Value="{DynamicResource PressedBrush}" TargetName="Border"/>
    								<Setter Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}" TargetName="Border"/>
    							</Trigger>
    							<Trigger Property="IsEnabled" Value="true"/>
    							<Trigger Property="IsEnabled" Value="false">
    								<Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
    								<Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
    								<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
    							</Trigger>
    						</ControlTemplate.Triggers>
-->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
